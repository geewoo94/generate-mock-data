{"version":3,"sources":["App.tsx","utils/generate.ts","index.tsx"],"names":["JSONEditor","value","setValue","style","width","height","onChange","e","currentTarget","placeholder","Models","models","handleAddModel","handleRemoveModel","handleChangeModelName","handleChangeModelValue","display","flexDirection","alignItems","type","onClick","map","model","gap","name","id","Generate","onGenerate","margin","GenerateField","readOnly","JSON","stringify","App","useState","nanoid","json","setJson","setModels","generatedValue","setGeneratedValue","className","result","parsers","callback","Math","floor","random","currentDate","dayjs","toDate","getTime","prevSevenDate","date","Date","toISOString","forEach","push","parse","i","parser","regexArray","RegExp","regexObject","test","replace","_","p1","Number","length","generate","err","message","modelId","filter","position","bottom","right","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70df7b19.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { nanoid } from 'nanoid';\n\nimport { generate } from './utils/generate';\nimport { Model } from './type';\n\nconst JSONEditor = ({ value, setValue }: { value: string, setValue: (value: string) => void }) => {\n  return (\n    <div>\n      <h1>JSON</h1>\n      <textarea\n        style={{ width: 400, height: 400 }}\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        placeholder=\"Type your json\"\n      />\n    </div>\n  );\n}\n\nconst Models = (\n  {\n    models,\n    handleAddModel,\n    handleRemoveModel,\n    handleChangeModelName,\n    handleChangeModelValue,\n  }:\n  {\n    models: Model[],\n    handleAddModel: () => void,\n    handleRemoveModel: (id: string) => void,\n    handleChangeModelName: (id: string, value: string) => void,\n    handleChangeModelValue: (id: string, value: string) => void,\n  }) => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: 500 }}>\n      <button type=\"button\" onClick={handleAddModel} style={{ width: 200, height: 50 }}>Add Model</button>\n      {models.map(model => {\n        return (\n          <div key={model.id} style={{ display: 'flex', flexDirection: 'column', gap: 10 }}>\n            <h2>Model - {model.name}</h2>\n            <input\n              placeholder=\"model name\"\n              onChange={(e) => handleChangeModelName(model.id, e.currentTarget.value)}\n              style={{ height: 40 }}\n            />\n            <textarea\n              placeholder=\"Type your json\"\n              style={{ width: 350, height: 250 }}\n              value={model.value}\n              onChange={(e) => handleChangeModelValue(model.id, e.currentTarget.value)}\n            />\n            <button type=\"button\" onClick={() => handleRemoveModel(model.id)}>REMOVE!</button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Generate = ({ onGenerate }: { onGenerate: () => void }) => {\n  return (\n    <button type=\"button\" onClick={onGenerate} style={{ margin: 10, height: 40 }}>Generate!</button>\n  )\n}\n\nconst GenerateField = ({ value }: { value: string }) => {\n  return (\n    <textarea readOnly style={{ height: 400 }} value={JSON.stringify(value, null, 2)} />\n  );\n}\n\nconst App = () => {\n  const [json, setJson] = useState<Model>({ id: nanoid(), name: '@JSON', value: ''});\n  const [models, setModels] = useState<Model[]>([]);\n  const [generatedValue, setGeneratedValue] = useState('')\n\n  const handleGenerate = () => {\n    const result = generate(json, models);\n\n    try {\n      setGeneratedValue(JSON.parse(result));\n    } catch (err) {\n      setGeneratedValue(err.message);\n    }\n  }\n\n  const handleSetJson = (value: string) => {\n    setJson({\n      ...json,\n      value,\n    });\n  };\n\n  const handleAddModel = () => {\n    setModels([\n      ...models,\n      {\n        id: nanoid(12),\n        name: '',\n        value: '',\n      }\n    ]);\n  };\n\n  const handleRemoveModel = (modelId: string) => {\n    setModels((models) => {\n      return models.filter((model) => model.id !== modelId)\n    })\n  }\n\n  const handleChangeModelName = (modelId: string, name: string) => {\n    setModels((models) => {\n      return models.map((model) => {\n        if (model.id === modelId) {\n          return {\n            id: model.id,\n            name,\n            value: model.value\n          };\n        }\n\n        return model;\n      });\n    });\n  }\n\n  const handleChangeModelValue = (modelId: string, value: string) => {\n    setModels((models) => {\n      return models.map((model) => {\n        if (model.id === modelId) {\n          return {\n            id: model.id,\n            name: model.name,\n            value,\n          };\n        }\n\n        return model;\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\" style={{ display: 'flex' }}>\n      <div>\n        <JSONEditor\n          value={json.value}\n          setValue={handleSetJson}\n        />\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 10 }}>\n          <Generate onGenerate={handleGenerate}/>\n          <GenerateField value={generatedValue}/>\n        </div>\n      </div>\n      <Models\n        models={models}\n        handleAddModel={handleAddModel}\n        handleRemoveModel={handleRemoveModel}\n        handleChangeModelName={handleChangeModelName}\n        handleChangeModelValue={handleChangeModelValue}\n      />\n      <div style={{ position: 'fixed', bottom: 20, right: 30, width: 50, height: 30 }}>\n        <a href=\"https://github.com/geewoo94/generate-mock-data\">GITHUB</a>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { nanoid } from 'nanoid';\nimport dayjs from 'dayjs';\n\nimport { Model } from '../type';\n\nexport const generate = (json: Model, models: Model[]) => {\n  const parsers = [\n    {\n      name: 'RANDOM_STRING',\n      callback: (value: number = 12) => `\"${nanoid(value)}\"`,\n    },\n    {\n      name: 'RANDOM_NUMBER',\n      callback: (value: number = 10) => `${Math.floor(Math.random() * value)}`,\n    },\n    {\n      name: 'RANDOM_DATE',\n      callback: (value: number = -7) => {\n        const currentDate = dayjs().toDate().getTime();\n        const prevSevenDate = dayjs().date(value).toDate().getTime();\n        return `\"${(new Date(prevSevenDate + Math.random() * (currentDate - prevSevenDate))).toISOString()}\"`;\n      }\n    }\n  ];\n\n  models.forEach((model) => {\n    parsers.push({\n      name: model.name,\n      callback: (value: number = 0) => {\n        if (value === 0) {\n          return parse(model);\n        }\n\n        let result = '';\n\n        for (let i = 0; i < value; i++) {\n          if (i === 0) result += '[';\n\n          result += parse(model);\n          if (i < value - 1) result += ',';\n          if (i === value - 1) result += ']';\n        }\n\n        return result;\n      }\n    })\n  });\n\n  return parse(json);\n\n  function parse(model: Model) {\n    let result = model.value;\n\n    for (let i = 0; i < parsers.length; i++) {\n      const parser = parsers[i];\n      const regexArray = new RegExp(`${parser.name}\\\\((\\\\-?\\\\d+)\\\\)`, 'g');\n      const regexObject = new RegExp(`${parser.name}\\\\(\\\\)`, 'g');\n\n      if (regexObject.test(model.value)) {\n        result = result.replace(regexObject, () => {\n          return parser.callback();\n        })\n      }\n\n      if (regexArray.test(model.value)) {\n        result = result.replace(regexArray, (_, p1: string) => {\n          return parser.callback(Number(p1));\n        });\n      }\n    }\n\n    return result;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}